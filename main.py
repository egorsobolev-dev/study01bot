# main.py
import logging
import sys
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from telegram.error import Conflict, NetworkError
from config import BOT_TOKEN
from handlers import start, new_order, help_command, button_handler, handle_order_description, handle_order_files
from admin import admin_orders
from database import create_tables

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        logger.info("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
        if not BOT_TOKEN:
            logger.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            sys.exit(1)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ë–î
        create_tables()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        application = Application.builder().token(BOT_TOKEN).build()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("new_order", new_order))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("admin_orders", admin_orders))
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–Ω–æ–ø–æ–∫
        application.add_handler(CallbackQueryHandler(button_handler))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ–∞–π–ª–æ–≤
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_order_description))
        application.add_handler(MessageHandler(filters.Document.ALL | filters.PHOTO, handle_order_files))
        
        logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        application.run_polling(
            allowed_updates=Update.ALL_TYPES,
            drop_pending_updates=True  # –û—á–∏—â–∞–µ—Ç pending –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        )
        
    except Conflict as e:
        logger.error("‚ùå –ö–û–ù–§–õ–ò–ö–¢: –î—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω!")
        logger.error("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –±–æ—Ç–∞ –Ω–∞ Railway –∏–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–æ–ø–∏–∏")
        logger.error(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {e}")
        sys.exit(1)
        
    except NetworkError as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        logger.error("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        sys.exit(1)
        
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()