# handlers.py
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import sqlite3

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    conn = sqlite3.connect('academic_bot.db')
    cursor = conn.cursor()
    cursor.execute(
        'INSERT OR REPLACE INTO users (user_id, username, first_name) VALUES (?, ?, ?)',
        (user.id, user.username, user.first_name)
    )
    conn.commit()
    conn.close()
    
    welcome_text = f"""
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}! üëã

–Ø –±–æ—Ç –¥–ª—è –ø—Ä–∏–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã.

–ú–æ–≥—É –ø–æ–º–æ—á—å —Å:
üìö –ö—É—Ä—Å–æ–≤—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏
üéì –î–∏–ø–ª–æ–º–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏
üìù –†–µ—Ñ–µ—Ä–∞—Ç–∞–º–∏ –∏ —ç—Å—Å–µ
üìä –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è–º–∏

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new_order –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    """
    
    keyboard = [
        [InlineKeyboardButton("üìù –ù–æ–≤—ã–π –∑–∞–∫–∞–∑", callback_data='new_order')],
        [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data='my_orders')],
        [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data='help')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def new_order(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìö –ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞", callback_data='type_coursework')],
        [InlineKeyboardButton("üéì –î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞", callback_data='type_diploma')],
        [InlineKeyboardButton("üìù –†–µ—Ñ–µ—Ä–∞—Ç", callback_data='type_essay')],
        [InlineKeyboardButton("üìä –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è", callback_data='type_presentation')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞–±–æ—Ç—ã:", 
        reply_markup=reply_markup
    ) 



async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):    
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""  
    help_text = """
    ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

    /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
    /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    /new_order - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑

    üìö –¢–∏–ø—ã —Ä–∞–±–æ—Ç:
    - –ö—É—Ä—Å–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã
    - –î–∏–ø–ª–æ–º–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã  
    - –†–µ—Ñ–µ—Ä–∞—Ç—ã –∏ —ç—Å—Å–µ
    - –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏

    üìß –î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç.
        """
    await update.message.reply_text(help_text)