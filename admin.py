# admin.py (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import sqlite3

ADMIN_IDS = [781822611]

async def admin_orders(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–∫–∞–∑—ã —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"""
    if update.effective_user.id not in ADMIN_IDS:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return
    
    conn = sqlite3.connect('academic_bot.db')
    cursor = conn.cursor()
    cursor.execute('''
        SELECT o.id, u.first_name, o.work_type, o.status, o.created_at
        FROM orders o 
        JOIN users u ON o.user_id = u.user_id 
        ORDER BY o.created_at DESC 
        LIMIT 10
    ''')
    
    orders = cursor.fetchall()
    conn.close()
    
    if not orders:
        await update.message.reply_text("–ù–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç")
        return
    
    text = "üìã –ó–∞–∫–∞–∑—ã (–Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π):\n\n"
    keyboard = []
    
    for order in orders:
        order_id, name, work_type, status, created_at = order
        text += f"#{order_id} - {name} ({work_type})\n"
        keyboard.append([InlineKeyboardButton(
            f"üìã –ó–∞–∫–∞–∑ #{order_id}", 
            callback_data=f'order_details_{order_id}'
        )])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(text, reply_markup=reply_markup)

async def admin_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É"""
    if update.effective_user.id not in ADMIN_IDS:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return
    
    args = context.args
    if len(args) < 2:
        await update.message.reply_text(
            "üìß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /reply USER_ID —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è\n\n"
            "–ü—Ä–∏–º–µ—Ä:\n"
            "/reply 7671242267 –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ —Ä–∞–±–æ—Ç—É. –°—Ç–æ–∏–º–æ—Å—Ç—å 3000 —Ä—É–±."
        )
        return
    
    try:
        user_id = int(args[0])
        message_text = " ".join(args[1:])
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É
        await context.bot.send_message(
            user_id, 
            f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n{message_text}"
        )
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        await update.message.reply_text(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
    except ValueError:
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")